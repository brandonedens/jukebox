#!/usr/bin/env python
# Brandon Edens
# AS220
# 2009-12-24
# Copyright (C) 2009 Brandon Edens <brandon@as220.org>
#
# This file is part of jukebox.
#
# jukebox is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# jukebox is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with jukebox.  If not, see <http://www.gnu.org/licenses/>.
"""
Implementation of executable used to start the jukebox software.
"""

###############################################################################
## Imports
###############################################################################

import os
os.environ['DJANGO_SETTINGS_MODULE'] = 'jukebox.settings'

from django.conf import settings
import clutter
import gobject
import logging
import signal
import sys
import time

from jukebox.client.gui import GUI


###############################################################################
## Constants
###############################################################################

LOCK_FILE=settings.LOCK_DIR+'/jukebox'


###############################################################################
## Functions
###############################################################################

def signal_handler(signum, frame):
    """
    Handler for incoming process signals.
    """
    if signum == signal.SIGINT:
        clutter.main_quit()

def main():
    """
    Main function.
    """
    # Setup logging.
    logging.basicConfig(filename=settings.LOG_JUKEBOX_FILENAME,
                        level=logging.DEBUG,
                        format=settings.LOG_FORMAT)
    consolehandler = logging.StreamHandler()
    consolehandler.setLevel( logging.DEBUG )
    formatter = logging.Formatter(settings.LOG_FORMAT)
    consolehandler.setFormatter(formatter)
    logging.getLogger( '' ).addHandler( consolehandler )

    logging.info("Starting Jukebox.")
    signal.signal(signal.SIGINT, signal_handler)
    # Sleep 2 seconds before starting.
    time.sleep(2)

    # Create the GUI
    gui = GUI()

    # Connect timers
    gobject.timeout_add_seconds(1, gui.on_second)

    # Run the GUI
    gui.run()

    logging.info("Stopping Jukebox.")

    return 0


###############################################################################
## Statements
###############################################################################

if __name__ == '__main__':
    # Store the process id in a lock file.
    try:
        os.makedirs(settings.LOCK_DIR)
    except OSError:
        pass
    pid = os.getpid()
    fh = open(LOCK_FILE, 'w')
    fh.write("%d\n" % pid)
    fh.close()

    returncode = main()

    # Remove the lock file
    os.remove(LOCK_FILE)

    sys.exit(returncode)
